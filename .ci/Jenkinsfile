pipeline {
    agent any
    options {
        ansiColor('xterm')
        buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
    }

    stages {

        stage('check parameters') {
            when {
                anyOf {
                    expression { env.TEST_NAME == null }
                }
            }
            steps {
                error('Please select an operator using the environment variable TEST_NAME')
            }
        }

        stage('prepare test run') {
            steps {
                script {
                    env.HOST_WORKSPACE = sh(script: 'echo ${WORKSPACE} | sed \'s~jenkins_home~jenkins/data~\'', returnStdout: true)
                }
                script {
                    sh """
                        echo The Jenkins workspace folder as seen from the Docker daemon: --> '${env.HOST_WORKSPACE}'
                    """
                }
            }
        }

        stage('test run') {
            steps {
                sh """
                    docker run \
                        --volume ${env.HOST_WORKSPACE}/.ci/target/:/target/" \
                        --volume ${env.HOST_WORKSPACE}/.ci/tests.yaml:/tests.yaml" \
                        --volume ${env.HOST_WORKSPACE}/.ci/platforms.yaml:/platforms.yaml" \
                        --env TEST_NAME=${env.TEST_NAME} \
                        docker.stackable.tech/ci-preprocessor:latest
                """
            }
        }

        // stage('print parameters') {
        //     when {
        //         allOf {
        //             expression { env.STACKABLE_OPERATOR != null }
        //         }
        //     }
        //     steps {
        //         echo "Testing the operator: ${env.STACKABLE_OPERATOR}"
        //     }
        // }

        // stage('print folder content') {
        //     steps {
        //         sh """
        //             cd .ci/
        //             rm -rf target/ || true
        //             mkdir target/
        //             docker run \
        //                 docker.stackable.tech/ci-preprocessor:latest
        //         """
        //     }
        // }

    }
}


