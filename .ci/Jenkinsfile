pipeline {
    agent any
    options {
        ansiColor('xterm')
        buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
    }

    stages {

        stage('assert parameters') {
            when {
                anyOf {
                    expression { env.TEST_NAME == null }
                }
            }
            steps {
                error('Please select an operator using the environment variable TEST_NAME')
            }
        }

        stage('prepare environment on Jenkins') {
            steps {
                script {
                    env.HOST_WORKSPACE = sh(script: 'echo ${WORKSPACE} | sed \'s~jenkins_home~jenkins/data~\'', returnStdout: true).trim()
                    env.T2_TESTDRIVER_USER_PARAM = sh(script: 'echo "$(id -u):$(id -g)"', returnStdout: true).trim()
                }
                script {
                    sh """
                        echo \"The Jenkins workspace folder as seen from the Docker daemon: '${env.HOST_WORKSPACE}'\"
                        echo \"The Docker user parameter value for T2 testdriver: '${env.T2_TESTDRIVER_USER_PARAM}'\"
                        docker pull docker.stackable.tech/ci-preprocessor:latest
                        docker pull docker.stackable.tech/t2-testdriver
                        mkdir -p .ci/tests/
                    """
                }
            }
        }

        stage('generate test files') {
            steps {
                sh """
                    docker run \
                        --volume ${env.HOST_WORKSPACE}/.ci/tests/:/target/ \
                        --volume ${env.HOST_WORKSPACE}/.ci/tests.yaml:/tests.yaml \
                        --volume ${env.HOST_WORKSPACE}/.ci/platforms.yaml:/platforms.yaml \
                        --env TEST_NAME=${env.TEST_NAME} \
                        docker.stackable.tech/ci-preprocessor:latest
                    mkdir -p .ci/tests/${env.TEST_NAME}/target
                """
            }
        }

        stage('run test') {
            steps {
                sh """
                    docker run \
                        --volume ${env.HOST_WORKSPACE}/.ci/tests/${env.TEST_NAME}/target/:/target/ \
                        --volume ${env.HOST_WORKSPACE}/.ci/tests/${env.TEST_NAME}/cluster.yaml:/cluster.yaml \
                        --volume ${env.HOST_WORKSPACE}/.ci/tests/${env.TEST_NAME}/test.sh:/test.sh \
                        --env T2_TOKEN=tuctuc \
                        --env T2_URL=https://t2.stackable.tech \
                        --env UID_GID=${env.T2_TESTDRIVER_USER_PARAM} \
                        docker.stackable.tech/t2-testdriver    
                """
            }
        }

    }
}
